{"version":3,"sources":["components/images/profile.jpg","components/AboutMe.js","components/Contact.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","AboutMe","className","alt","src","require","href","target","App","to","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sLAAAA,EAAOC,QAAU,IAA0B,qC,wGCG5B,SAASC,IAEpB,OACI,yBAAKC,UAAU,cACX,yBAAKA,UAAU,WACX,+BACI,+BACI,4BACI,4BACI,yBAAKC,IAAI,QAAQC,IAAKC,EAAQ,OAElC,4BACI,qCACA,mfAOpB,+BACI,+BACI,4BACI,4BACI,yBAAKH,UAAU,WACX,0CACA,2BAAG,uCAAH,4CACA,2BAAG,gDACH,4BACI,wBAAIA,UAAU,cAAd,mQAIJ,2BAAG,+CAAH,6CACA,2BAAG,yDACH,4BACI,wBAAIA,UAAU,cAAd,yGAGA,wBAAIA,UAAU,cAAd,kJAMR,yBAAKA,UAAU,WACX,qEACA,iDACA,4BACI,wBAAIA,UAAU,cAAd,gIAIA,wBAAIA,UAAU,cAAd,oIAMJ,qDACA,4BACI,wBAAIA,UAAU,cAAd,iGAEA,wBAAIA,UAAU,cAAd,yIAMZ,4BACI,yBAAKA,UAAU,WACX,0DACA,4BACI,wBAAIA,UAAU,cAAd,SACA,wBAAIA,UAAU,cAAd,QACA,wBAAIA,UAAU,cAAd,KACA,wBAAIA,UAAU,cAAd,SACA,wBAAIA,UAAU,cAAd,OACA,wBAAIA,UAAU,cAAd,OACA,wBAAIA,UAAU,cAAd,mBACA,wBAAIA,UAAU,cAAd,aAIR,yBAAKA,UAAU,WACX,yCACA,6DACA,qEACA,mDACA,2BAAG,+HCzFpB,SAASD,IAEpB,OACI,yBAAKC,UAAU,WACX,sDACA,yBAAKA,UAAU,WACX,2BAAG,uBAAGI,KAAK,iCAAiCC,OAAO,QAAhD,4BACH,2BAAG,uBAAGD,KAAK,4CAAR,iCACH,2BAAG,uBAAGA,KAAK,4BAAR,wBC4BJE,MA9Bf,WAEE,OACE,kBAAC,IAAD,KACE,yBAAKN,UAAU,WACb,yBAAMA,UAAU,eAChB,4BACE,wBAAIA,UAAU,SAAQ,gCAAQ,kBAAC,IAAD,CAAMA,UAAU,UAAUO,GAAG,KAA7B,cAC9B,wBAAIP,UAAU,SAAQ,gCAAQ,kBAAC,IAAD,CAAMA,UAAU,UAAUO,GAAG,YAA7B,aAC9B,wBAAIP,UAAU,YACZ,4BAAQA,UAAU,gBAAlB,YAA0C,0CAC1C,yBAAKA,UAAU,oBACb,uBAAGI,KAAK,qCAAR,WACA,uBAAGA,KAAK,2CAAR,iCAKR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOI,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAACT,EAAD,UCpBQU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.2364ad3c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.d2d90f26.jpg\";","import React from 'react';\r\nimport './css/App.css';\r\n\r\nexport default function AboutMe() {\r\n\r\n    return (\r\n        <div className='background'>\r\n            <div className='section'>\r\n                <table >\r\n                    <tbody>\r\n                        <tr>\r\n                            <td>\r\n                                <img alt='pizza' src={require('./images/profile.jpg')} />\r\n                            </td>\r\n                            <td>\r\n                                <h3>About</h3>\r\n                                <p>I recently graduated from Western Washington University with a Bachelor of Science degree in Computer Science. I am currently seeking a job as a Front-End Developer in the Greater Seattle Area, where I live now. I have experience with databases and front-end design implementation as these were my primary tasks in developing a roommate matching software for Opportunity Council in Bellingham, WA. I’m passionate and eager to expand my skills in this field. </p>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <table >\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <div className='section'>\r\n                                <h3>Experience</h3>\r\n                                <p><b>Cognixia</b>- Redmond, WA January 2020 - March 2020 </p>\r\n                                <p><i>React Developer </i></p>\r\n                                <ul>\r\n                                    <li className='resumeList'>Engaged in a development program where I was able to work on projects using the following technologies: \r\n                                            React Essentials, Modern React with Redux, HTML5, CSS3, and JavaScript, Microsoft SQL, JSON, NPM, D3.js, Node JS, , Rest API and Webservices, MongoDB </li>\r\n                                </ul>\r\n\r\n                                <p><b>Rainier Scholars</b>- Seattle, WA   July 2020 - January 2020 </p>\r\n                                <p><i>Computer Science Teacher </i></p>\r\n                                <ul>\r\n                                    <li className='resumeList'>\r\n                                        Taught young student the basics of coding with TechSmart’s drag and drop coding language Skylark  \r\n                                    </li>\r\n                                    <li className='resumeList'>\r\n                                        Helped to develop a curriculum for improving computer skills for children, such as emailing, file system management, using a word processor. \r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className='section'>\r\n                                <h3>Additional Projects and Technologies </h3>\r\n                                <h5>Roommate Matcher </h5>\r\n                                <ul>\r\n                                    <li className='resumeList'>\r\n                                        Successfully completed roommate matching software for Opportunity Council,\r\n                                        a non-profit housing agency serving Watcom County\r\n                                    </li>\r\n                                    <li className='resumeList'>\r\n                                        Designed and implemented the user interface and matching algorithm using Electron,\r\n                                        MySQL, HTML, CSS, JavaScript, NPM, and JSON.\r\n                                    </li>\r\n                                </ul>\r\n\r\n                                <h5>Recipe Collection App</h5>\r\n                                <ul>\r\n                                    <li className='resumeList'>\r\n                                        Used Android Studio to create a recipe collection mobile app implemented with Java and SQLite</li>\r\n                                    <li className='resumeList'>\r\n                                        Built 'create new recipe' and 'find recipe by ingredient' functionality using the local file system on the device to store recipes\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                        </td>\r\n                        <td>\r\n                            <div className='section'>\r\n                                <h3>Languages and Technologies</h3>\r\n                                <ul>\r\n                                    <li className='resumeList'>React</li>\r\n                                    <li className='resumeList'>Java</li>\r\n                                    <li className='resumeList'>C</li>\r\n                                    <li className='resumeList'>HTML5</li>\r\n                                    <li className='resumeList'>CSS</li>\r\n                                    <li className='resumeList'>SQL</li>\r\n                                    <li className='resumeList'>Node, npm, JSON</li>\r\n                                    <li className='resumeList'>MongoDB</li>\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className='section'>\r\n                                <h3>Education</h3>\r\n                                <h5>Western Washington University</h5>\r\n                                <h6>Bachelor of Science, Computer Science</h6>\r\n                                <p>Relevant Coursework:</p>\r\n                                <p><i>Mobile Device Programming, Databases, Object-Oriented Design, and Social Network Analysis</i></p>\r\n                                  \r\n                            </div>\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './css/App.css';\r\n\r\nexport default function AboutMe() {\r\n\r\n    return (\r\n        <div className='section'>\r\n            <h3>You can contact me at:</h3>\r\n            <div className='section'>\r\n                <p><a href=\"mailto:jade.moksness@gmail.com\" target=\"_top\">jade.moksness@gmail.com</a></p>\r\n                <p><a href='https://www.linkedin.com/in/jademoksness'>linkedin.com/in/jademoksness</a></p>\r\n                <p><a href='http://github.com/JadeMM'>github.com/JadeMM</a></p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\nimport './css/App.css';\nimport {\n    BrowserRouter as Router,\n    Switch, Route, Link\n  } from \"react-router-dom\";\nimport AboutMe from './AboutMe';\nimport Contact from './Contact';\n\nfunction App() {\n\n  return (\n    <Router>\n      <nav className='homeNav'>\n        <div  className=\"background\"/>\n        <ul>\n          <li className='navli'><button><Link className='navLink' to=\"/\">About Me</Link></button></li>\n          <li className='navli'><button><Link className='navLink' to=\"/contact\">Contact</Link></button></li>\n          <li className=\"dropdown\">\n            <button className=\"dropdown-btn\">Projects <span> &#9660;</span></button>\n            <div className=\"dropdown-content\">\n              <a href=\"https://jademm.github.io/d3-demo/\">D3 Demo</a>\n              <a href=\"https://jademm.github.io/pizza-orderer/\">React Pizza Ordering Menu</a>\n            </div>\n          </li>\n        </ul>\n      </nav>\n      <Switch>\n          <Route path=\"/contact\">\n            <Contact/>\n          </Route>\n          <Route path=\"/\">\n            <AboutMe />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}